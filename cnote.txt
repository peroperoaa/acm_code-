零散篇
1.a++先用后加 ++a先加后用
2.sizeof(a++)为静态运算符（不计算）
3.动态内存分配必须free原来的位置					//即 p++后 free(--p);
4.短路： a == 1 &&  a++ 	/*此处换成||也成立*/			//若a == 1成立时a++不再计算
5.浮点数 printf %e 表示科学计数法
6.%o输出为八进制数 %x输出为十六进制数(此时abcdef为小写)		//%X%O则输出大写


符号优先级
1. () ! 
2. ++ -- + (单目)
3. * / %
4. + -
5. < <= >= >
6. == !=
7. &&
8. ||
9. = += -= *= /= %=


分支循环语句篇
1.while 可能一遍都不做	do-while 至少做一遍然后判断
2.switch-case case要空格


数据类型篇
1.bool类型0为0 非0为1								//需调用<stdbool.h>
2.*(个人经验)不要把浮点型强制转换为整型，会出现精度问题  				//(double)8.000000 <-> (int) 7.9999999999999999	当不得已用浮点数，后续又需要输出整数时，可考虑浮点修正，给数字加上一个“很小”的值1e-8(大多情况)
3.判断两个浮点数是否相等用fabs(f1-f2)<1e-12					//用于判断浮点数是否相等，指数应当小于浮点类型有效数字
4.3.1415f 									//未加f自动转化为double	


函数篇
1.函数头;									//即原型声明，此处调用变量名可省略 如：(int,int)（一般不建议）
2.定义函数时无调用写void有调用明确
  (void)   (int, int)								//定义函数时明确数据类型()!=(void)而是不确定
3.函数不能嵌套定义
4.printf scanf_s能作为变量名，但不建议


数组篇
1.定义数组时数组元素数量可以是变量(c++不行）		       			//ansic只能是常数
2.数组下标不能越界
本地变量需要初始化	函数参数调用时已经初始化
3.sizeof(a)/sizeof(a[0])							//结果为个数
4.数组作为函数参数是[]里不能给出个数也不能在函数中用sizeof，只能引入另一个参数记录个数
5.数组在定义时数组个数应当确定，且应当只能在初始化时对数组赋值			//int a[10] ={0};的时候 a[10]代表数组   其他情况的a[10]代表数组第11个数


指针篇
1.数组是特殊的指针					
2.%p输出是将变量所存值以地址形式输出
3.定义指针的时候使其指向其他变量
4.对于指针p   p[0]即p所指的变量当作一个数组，值为数组中的第一个单元	
*数组可以理解为数组变量与第一个单元共享一个空间  			 		*推论：被指才能成为数组     	
5.const在*前面 *p不可以变  const在*后面 p指向不可变
6.在原型声明的函数表中使用const int *p 可以保证不改动外面的数值
7.在定义的函数的函数表内 int a[] <==> int *a 			
8.在函数表处参数设为 const int a[]						//保证数组的值不能被改


字符串篇
1.字符串会自动转化为字符数组
2.strlen的计数不包括0
3.strcmp ISO规定结果为0 正数 复数							//(字典序排序)str1>str2返回值为正数 反之为负数
4.strcpy的结果为字符串	
5.strncpy    strncmp strncat							//n为数值，对于strcpy和strcat是只拷贝n个字符,strncmp是只对比n个字符  格式为strncpy(str1,str2,n);	
6.strchr(从左开始第一个字符) strrchr(从右开始第一个字符)				//格式：strchr(str, 'a') 	返回类型：指针 	找不到返回0
7.strstr(在字符串中找字符串) strcasestr(无论大小写找字符串)			//格式：strstr(str1, str2)	返回类型：同上
*8.字符串必须开char类型


结构体篇
1.结构也可以看作一个变量，可被另一个变量赋值也可直接赋值(故结构变量不是地址)		//struct test a = {.a=3,.c=4};注意"."
2.结构作为参数传入函数是通过在函数内复制clone一个类型相同的结构,需要更改结构可return 结构体,而更好的做法是传入指针
3.表示一个被指结构内一个元素的值可以写作 (*p).a 或 p->a


大程序篇
1.未初始化的全局变量会自动初始化为0(指针会指向NULL)
2.全局变量只能用编译时已知的值来初始化
3.static的本地变量只会在第一次进入函数时初始化，以后进入函数会保持上次离开时的值(全局生存期，局部作用域)
4.返回全局变量是安全的，返回本地变量是危险的，最好返回传入指针
5.尽量避免使用全局变量
6.编译器每次编译只处理一个编译单元(一个.c文件)


位运算篇
1.& 与 |或(相等结果为1)  ~取反 ^异或(不相等结果为一,x^y^y==x) 
2.<<左移与符号无关 >>右移时符号位保留


编写经验篇
1.if处的==不能写成=
2.循环所用到的变量考虑是否要清零
3.变量尽量初始化
4.字符串函数使用时应该注意结尾'\0',多次字符串处理时用'\0'截断(可让字符串=“”)			//%s读入字符串会自动清零






